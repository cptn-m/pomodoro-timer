{"ast":null,"code":"var _jsxFileName = \"/Users/Mary/coding-projects/pomodoro-timer/pomodoro-timer/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/AuthContext.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { supabase } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const session = supabase.auth.getSession();\n    setUser((session === null || session === void 0 ? void 0 : session.user) || null);\n    setLoading(false);\n    const {\n      data: authListener\n    } = supabase.auth.onAuthStateChange((event, session) => {\n      setUser((session === null || session === void 0 ? void 0 : session.user) || null);\n      setLoading(false);\n    });\n    return () => {\n      authListener === null || authListener === void 0 ? void 0 : authListener.unsubscribe();\n    };\n  }, []);\n  const signUp = async (email, password) => {\n    const {\n      user,\n      error\n    } = await supabase.auth.signUp({\n      email,\n      password\n    });\n    if (error) throw error;\n    setUser(user);\n  };\n  const signIn = async (email, password) => {\n    const {\n      user,\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (error) throw error;\n    setUser(user);\n  };\n  const signOut = async () => {\n    await supabase.auth.signOut();\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      signUp,\n      signIn,\n      signOut\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","supabase","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","session","auth","getSession","data","authListener","onAuthStateChange","event","unsubscribe","signUp","email","password","error","signIn","signInWithPassword","signOut","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/Mary/coding-projects/pomodoro-timer/pomodoro-timer/src/contexts/AuthContext.js"],"sourcesContent":["// src/contexts/AuthContext.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { supabase } from '../supabaseClient';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const session = supabase.auth.getSession();\n        setUser(session?.user || null);\n        setLoading(false);\n\n        const { data: authListener } = supabase.auth.onAuthStateChange((event, session) => {\n            setUser(session?.user || null);\n            setLoading(false);\n        });\n\n        return () => {\n            authListener?.unsubscribe();\n        };\n    }, []);\n\n    const signUp = async (email, password) => {\n        const { user, error } = await supabase.auth.signUp({ email, password });\n        if (error) throw error;\n        setUser(user);\n    };\n\n    const signIn = async (email, password) => {\n        const { user, error } = await supabase.auth.signInWithPassword({ email, password });\n        if (error) throw error;\n        setUser(user);\n    };\n\n    const signOut = async () => {\n        await supabase.auth.signOut();\n        setUser(null);\n    };\n\n    return (\n        <AuthContext.Provider value={{ user, loading, signUp, signIn, signOut }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ,MAAMa,OAAO,GAAGX,QAAQ,CAACY,IAAI,CAACC,UAAU,CAAC,CAAC;IAC1CL,OAAO,CAAC,CAAAG,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEJ,IAAI,KAAI,IAAI,CAAC;IAC9BG,UAAU,CAAC,KAAK,CAAC;IAEjB,MAAM;MAAEI,IAAI,EAAEC;IAAa,CAAC,GAAGf,QAAQ,CAACY,IAAI,CAACI,iBAAiB,CAAC,CAACC,KAAK,EAAEN,OAAO,KAAK;MAC/EH,OAAO,CAAC,CAAAG,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEJ,IAAI,KAAI,IAAI,CAAC;MAC9BG,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;IAEF,OAAO,MAAM;MACTK,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEG,WAAW,CAAC,CAAC;IAC/B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACtC,MAAM;MAAEd,IAAI;MAAEe;IAAM,CAAC,GAAG,MAAMtB,QAAQ,CAACY,IAAI,CAACO,MAAM,CAAC;MAAEC,KAAK;MAAEC;IAAS,CAAC,CAAC;IACvE,IAAIC,KAAK,EAAE,MAAMA,KAAK;IACtBd,OAAO,CAACD,IAAI,CAAC;EACjB,CAAC;EAED,MAAMgB,MAAM,GAAG,MAAAA,CAAOH,KAAK,EAAEC,QAAQ,KAAK;IACtC,MAAM;MAAEd,IAAI;MAAEe;IAAM,CAAC,GAAG,MAAMtB,QAAQ,CAACY,IAAI,CAACY,kBAAkB,CAAC;MAAEJ,KAAK;MAAEC;IAAS,CAAC,CAAC;IACnF,IAAIC,KAAK,EAAE,MAAMA,KAAK;IACtBd,OAAO,CAACD,IAAI,CAAC;EACjB,CAAC;EAED,MAAMkB,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxB,MAAMzB,QAAQ,CAACY,IAAI,CAACa,OAAO,CAAC,CAAC;IAC7BjB,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,oBACIN,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,IAAI;MAAEE,OAAO;MAAEU,MAAM;MAAEI,MAAM;MAAEE;IAAQ,CAAE;IAAApB,QAAA,EACnEA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACzB,EAAA,CAzCWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AA2CzB,OAAO,MAAM6B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMrC,UAAU,CAACM,WAAW,CAAC;AAAA;AAAC+B,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}